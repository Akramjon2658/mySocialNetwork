{"version":3,"sources":["components/Users/users.module.css","components/common/Paginator/paginator.module.css","components/Users/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","../node_modules/reselect/es/index.js","components/Users/users-reselect.js","components/Users/UsersContainer.jsx"],"names":["module","exports","User","user","followingInProgress","follow","unfollow","className","s","key","id","profile","to","src","photos","small","logo","alt","followed","disabled","some","onClick","messageBody","name","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pages","pageCount","Math","ceil","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","Users","isFetching","users","Preloader","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","props","getUsers","this","toggleFollowingProgress","React","Component","connect","setTotalUsersCount","toggleIsFetching"],"mappings":"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","file":"static/js/3.6dc4d894.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"users_loading__1tebo\",\"user\":\"users_user__Xw7HJ\",\"messageBody\":\"users_messageBody__PjZao\",\"profile\":\"users_profile__1apih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"paginator_pages__2fY5Q\",\"currentPage\":\"paginator_currentPage__1vDPM\"};","import React from \"react\";\r\nimport logo from \"../Profile/ProfileInfo/IslamicBanking.jpg\";\r\nimport s from \"./users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({ user, followingInProgress, follow, unfollow  }) => {\r\n  return (\r\n    <div className={s.user} key={user.id}>\r\n      <span className={s.profile}>\r\n        <NavLink to={`/profile/${user.id}`}>\r\n          <img src={user.photos.small ? user.photos.small : logo} alt=\"logo\" />\r\n        </NavLink>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => unfollow(user.id)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => follow(user.id)}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span className={s.messageBody}>\r\n        <span>\r\n          <div> {user.id} </div>\r\n          <div> {user.name} </div>\r\n        </span>\r\n        <span>\r\n          <div> {\"user.location.country\"} </div>\r\n          <div> {\"user.location.city\"} </div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default User;\r\n","import React, { useState } from 'react'\r\nimport s from \"./paginator.module.css\";\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n  let pages = [];\r\n  let pageCount = Math.ceil(totalUsersCount / pageSize);\r\n  for (let i = 1; i <= pageCount; i++ ) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pageCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1; \r\n  let rightPortionPageNumber = portionNumber * portionSize; \r\n\r\n  return <div className={s.pages}>\r\n        { portionNumber > 1 && \r\n          <button className= \"btn btn-primary\" onClick={() => setPortionNumber(portionNumber - 1)}>prev</button>\r\n        }\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\r\n          return (\r\n            <span\r\n              className={currentPage === p && s.currentPage}\r\n              onClick={() => onPageChanged(p)}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n        { portionNumber < portionCount &&\r\n          <button className=\"btn btn-primary\" onClick={() => setPortionNumber(portionNumber + 1)}>next</button>\r\n        }\r\n        </div>\r\n}\r\nexport default Paginator;","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport User from \"./User\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\"\r\n\r\nlet Users = (\r\n  {totalUsersCount, \r\n    pageSize, \r\n    currentPage, \r\n    onPageChanged, \r\n    followingInProgress, \r\n    follow, \r\n    unfollow, \r\n    isFetching, \r\n    users}) => {\r\n    return (\r\n      <div className={s.users}>\r\n      <Paginator \r\n        totalUsersCount={totalUsersCount} \r\n        pageSize={pageSize} \r\n        currentPage={currentPage} \r\n        onPageChanged ={onPageChanged}/>\r\n\r\n      {isFetching ? <Preloader /> : null}\r\n      \r\n      {users.map(user => (\r\n        <User user={user} followingInProgress={followingInProgress} follow={follow} unfollow={unfollow}/>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\"\r\n\r\nconst getUsers = (state) => {\r\n  return state.usersPage.users\r\n}\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n  return users\r\n})\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { follow, unfollow, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, getUsers } from \"../../redux/users-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsersSelector } from \"./users-reselect\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() { \r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize)      \r\n  }\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize)     \r\n  }\r\n  render() { \r\n    return <Users totalUsersCount = { this.props.totalUsersCount}\r\n                  pageSize = { this.props.pageSize}\r\n                  currentPage = { this.props.currentPage }\r\n                  isFetching = { this.props.isFetching }\r\n                  onPageChanged = {this.onPageChanged}\r\n                  users = {this.props.users} \r\n                  follow = { this.props.follow } \r\n                  unfollow = { this.props.unfollow }\r\n                  toggleFollowingProgress = {this.props.toggleFollowingProgress}\r\n                  followingInProgress = {this.props.followingInProgress} />\r\n  }\r\n}\r\nlet mapStateToProps = state => {\r\n  return {\r\n    users: getUsersSelector(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n}; \r\n/*let mapDispatchToProps = dispatch => {\r\n  return {\r\n    follow: userId => {\r\n      dispatch(followAC(userId));\r\n    }\r\n  };\r\n};*/\r\nexport default connect(mapStateToProps, \r\n  {\r\n    follow,\r\n    unfollow,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n  }\r\n  )(UsersContainer);\r\n"],"sourceRoot":""}