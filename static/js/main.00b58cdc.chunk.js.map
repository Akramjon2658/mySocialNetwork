{"version":3,"sources":["components/Profile/ProfileInfo/IslamicBanking.jpg","hoc/withAuthRedirect.jsx","utils/object-helpers.jsx","redux/users-reducer.jsx","components/common/Preloader/Blocks-1s-200px.svg","components/Profile/profile.module.css","components/Header/header.module.css","api/api.js","components/Navbar/nav.module.css","components/common/FormControl/FormControl.js","serviceWorker.js","redux/profile-reducer.jsx","redux/auth-reducer.jsx","redux/app-reducer.jsx","redux/redux-store.jsx","components/Navbar/Nav.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.jsx","App.js","index.js","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","components/Profile/MyPosts/post.module.css","components/common/FormControl/FormControl.module.css","redux/dialogs-reducer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","updateObjectArray","items","itemId","ObjPropName","newObjProps","map","item","initialState","users","pageSize","currentPage","totalUsersCount","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","a","userAPI","data","totalCount","followUnfollowFlow","action","succesTypeAC","unfollow","bind","follow","usersReducer","followed","filter","id","initialAxios","axios","baseURL","withCredentials","headers","get","then","response","delete","resultCode","post","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuthUser","login","email","password","rememberMe","logout","FormControl","input","meta","touched","error","children","hasError","className","style","formControl","Textarea","restProps","Input","createField","component","name","validators","placeholder","aboutText","validate","Boolean","window","location","hostname","match","posts","profile","setUserStatus","profileReducer","row","text","setAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","dialogsPage","dialogsReducer","profilePage","usersPage","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Nav","s","nav","activeClassName","activeLink","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","ProfileInfo","src","photos","large","alt","Preloader","Post","logo","href","MyPosts","memo","messageElements","reverse","m","myPosts","AddPostFormRedux","onSubmit","values","addPost","newPost","maxLength10","maxLength","reduxForm","handleSubmit","Field","required","MyPostsContainer","addPostCreator","Profile","content","ProfileContainer","params","authorizedUserId","getUserProfile","getUserStatus","withRouter","Header","header","onClick","HeaderContainer","LoginReduxForm","summaryError","errorMessage","messages","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","App","initializeApp","path","render","LoginPage","AppContainer","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","width","loading","maxLen","dialogs","message","sendMessageCreator"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,4C,6GCIvCC,EAAkB,SAACC,GAAD,MAAY,CAClCC,OAASD,EAAME,KAAKD,SAcLE,IAZU,SAACC,GAAe,IACjCC,EADgC,iLAGlC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHV,GACNC,IAAML,WAQtC,OADmCM,YAAQX,EAARW,CAAyBL,K,oFCfjDM,EAAoB,SAACC,EAAOC,EAAQC,EAAaC,GAC5DH,EAAMI,KAAK,SAAAC,GACX,OAAIL,EAAME,KAAiBD,EAClB,eAAKI,EAAZ,GAAqBF,GAEhBE,M,4MCDT,IAQIC,EAAe,CACjBC,MAAO,GACPC,SAAU,GACVC,YAAa,EACbC,gBAAiB,EACjBC,YAAY,EACZC,oBAAqB,IA+CVC,EAAgB,SAACC,GAAD,MAAa,CAAEC,KA7D7B,SA6D2CD,WAC7CE,EAAkB,SAACF,GAAD,MAAa,CAAEC,KA7D7B,WA6D6CD,WAEjDG,EAAiB,SAACR,GAAD,MAAkB,CAC9CM,KA9DuB,mBA+DvBN,gBAEWS,EAAqB,SAACR,GAAD,MAAsB,CACtDK,KAjE4B,wBAkE5BL,oBAEWS,EAAmB,SAACR,GAAD,MAAiB,CAC/CI,KApEyB,qBAqEzBJ,eAEWS,EAA0B,SAACT,EAAYG,GAAb,MAAyB,CAC9DC,KAvEgC,4BAwEhCJ,aACAG,WAGWO,EAAW,SAACZ,EAAaD,GACpC,8CAAO,WAAOc,GAAP,eAAAC,EAAA,6DACLD,EAASH,GAAiB,IADrB,SAEYK,IAAQH,SAASZ,EAAaD,GAF1C,OAEDiB,EAFC,OAGHH,EAASH,GAAiB,IAC1BG,EAxB8B,CAAEP,KA7DpB,YA6DqCR,MAwB/BkB,EAAKzB,QACvBsB,EAASJ,EAAmBO,EAAKC,aACjCJ,EAASL,EAAeR,IANrB,2CAAP,mDAAM,IASFkB,EAAkB,uCAAG,WAAOL,EAAUR,EAAQc,EAAQC,GAAjC,SAAAN,EAAA,6DACvBD,EAASF,GAAwB,EAAMN,IADhB,SAEAc,EAAOd,GAFP,OAGF,IAHE,QAGCQ,EAASO,EAAaf,IAE9CQ,EAASF,GAAwB,EAAON,IALjB,2CAAH,4DAOXgB,EAAW,SAAChB,GACvB,8CAAO,WAAOQ,GAAP,SAAAC,EAAA,sDAEPI,EAAmBL,EAAUR,EAAQU,IAAQM,SAASC,KAAKP,KAAUR,GAF9D,2CAAP,mDAAM,IAKKgB,EAAS,SAAClB,GACrB,8CAAO,WAAOQ,GAAP,SAAAC,EAAA,sDACLI,EAAmBL,EAAUR,EAAQU,IAAQQ,OAAOD,KAAKP,KAAUX,GAD9D,2CAAP,mDAAM,IAKOoB,IA9FM,WAAmC,IAAlC7C,EAAiC,uDAAzBkB,EAAcsB,EAAW,uCACrD,OAAQA,EAAOb,MACb,IAnBW,SAoBT,OAAO,eACF3B,EADL,CAEEmB,MAAOR,EAAkBX,EAAMmB,MAAOqB,EAAOd,OAAQ,KAAM,CAACoB,UAAU,MAE1E,IAvBa,WAwBX,OAAO,eACF9C,EADL,CAEEmB,MAAOR,EAAkBX,EAAMmB,MAAOqB,EAAOd,OAAQ,KAAM,CAACoB,UAAU,MAE1E,IA3Bc,YA4BZ,OAAO,eACF9C,EADL,CAEEmB,MAAM,YAAKqB,EAAOrB,SAEtB,IA/BqB,mBAgCnB,OAAO,eACFnB,EADL,CAEEqB,YAAamB,EAAOnB,cAExB,IAnC0B,wBAoCxB,OAAO,eACFrB,EADL,CAEEsB,gBAAiBkB,EAAOlB,kBAE5B,IAvCuB,qBAwCrB,OAAO,eACFtB,EADL,CAEEuB,WAAYiB,EAAOjB,aAEvB,IA3C8B,4BA4C5B,OAAO,eACFvB,EADL,CAEEwB,oBAAqBgB,EAAOjB,WAAP,sBACbvB,EAAMwB,qBADO,CACcgB,EAAOd,SACtC1B,EAAMwB,oBAAoBuB,QAAO,SAACC,GAAD,OAAQA,IAAOR,EAAOd,YAE/D,QACE,OAAO1B,K,oBC7DbH,EAAOC,QAAU,IAA0B,6C,oBCC3CD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,oBCApED,EAAOC,QAAU,CAAC,OAAS,yB,gCCD3B,mHAEImD,EAAeC,SAAa,CAC9BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACP,UAAW,0CAIFjB,EAAU,CACrBH,SADqB,WACqB,IAAjCZ,EAAgC,uDAAlB,EAAGD,EAAe,uDAAJ,GACnC,OAAO6B,EACJK,IADI,qBACcjC,EADd,kBACmCD,IACvCmC,MAAK,SAAAC,GAAc,OAAOA,EAASnB,SAExCK,SANqB,SAMZhB,GACP,OAAOuB,EAAaQ,OAAb,iBAA8B/B,IAAU6B,MAAK,SAAAC,GAAc,OAAOA,EAASnB,KAAKqB,eAEzFd,OATqB,SASdlB,GACL,OAAOuB,EAAaU,KAAb,iBAA4BjC,IAAU6B,MAAK,SAAAC,GAAc,OAAOA,EAASnB,KAAKqB,gBAG5EE,EAAa,CACxBC,WADwB,SACbnC,GACT,OAAOuB,EAAaK,IAAb,kBAA4B5B,KAErCoC,UAJwB,SAIdpC,GACR,OAAOuB,EAAaK,IAAb,yBAAmC5B,KAE5CqC,aAPwB,SAOXC,GACX,OAAOf,EAAagB,IAAb,iBAAmC,CAACD,OAAQA,MAG1CE,EAAU,CACrBC,YADqB,WAEnB,OAAOlB,EAAaK,IAAI,WAAWC,MAAK,SAAAC,GAAc,OAAOA,EAASnB,SAExE+B,MAJqB,SAIfC,EAAOC,EAAUC,GACrB,OAAOtB,EAAaU,KAAK,aAAc,CAACU,QAAOC,WAAUC,gBAE3DC,OAPqB,WAQnB,OAAOvB,EAAaQ,OAAO,iB,qGCzC/B5D,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,WAAa,0B,2LCGzE2E,EAAc,SAAC,GAAgD,EAA9CC,MAA+C,IAAD,IAAvCC,KAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SAChDC,EAAWH,GAAWC,EAC1B,OACE,yBAAKG,UAAWC,IAAMC,YAAc,KAAOH,EAAWE,IAAMJ,MAAQ,KAClE,6BACGC,GAEFC,GAAY,8BAAOF,KAIbM,EAAW,SAAC5E,GAAW,IAC1BmE,EAA8BnE,EAA9BmE,MAAgBU,GAAc7E,EAAvBoE,KADkB,YACKpE,EADL,mBAEjC,OAAO,kBAACkE,EAAgBlE,EACtB,8CAAcmE,EAAWU,MAGhBC,EAAQ,SAAC9E,GAAW,IACvBmE,EAA8BnE,EAA9BmE,MAAgBU,GAAc7E,EAAvBoE,KADe,YACQpE,EADR,mBAE9B,OAAO,kBAACkE,EAAgBlE,EACtB,2CAAWmE,EAAWU,MAGbE,EAAc,SAACC,EAAWC,EAAMC,EAAY9D,EAAM+D,EAAaC,GAC1E,OAAO,6BACL,kBAAC,IAAD,CAAOJ,UAAWA,EAAWC,KAAMA,EAAMI,SAAUH,EAAY9D,KAAMA,EAAM+D,YAAaA,IAAgBC,K,oFCjBxFE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2HCZF/E,EAAgB,CAClBgF,MAAO,CACL,CAAElD,GAAI,EAAGW,KAAM,OACf,CAAEX,GAAI,EAAGW,KAAM,eACf,CAAEX,GAAI,EAAGW,KAAM,iBAEjBwC,QAAS,KACTnC,OAAQ,IA8BGoC,EAAgB,SAACpC,GAAD,MAAY,CAAErC,KAvCnB,kBAuC0CqC,WAiBnDqC,EA5CQ,WAAmC,IAAlCrG,EAAiC,uDAAzBkB,EAAcsB,EAAW,uCACvD,OAAQA,EAAOb,MACb,IAhBa,WAiBX,IAAI2E,EAAM,CACRtD,GAAI,EACJW,KAAMnB,EAAO+D,MAEf,OAAO,eACFvG,EADL,CAEEkG,MAAM,GAAD,mBAAMlG,EAAMkG,OAAZ,CAAmBI,MAG5B,IAzBqB,mBA0BnB,OAAO,eACFtG,EADL,CACYmG,QAAS3D,EAAO2D,UAE9B,IA5BoB,kBA6BlB,OAAO,eACFnG,EADL,CACYgE,OAAQxB,EAAOwB,SAE7B,QACE,OAAOhE,I,iBChCTkB,EAAgB,CAClB8B,GAAI,KACJqB,MAAO,KACPD,MAAO,KACPnE,QAAQ,GAcGuG,EAAkB,SAACxD,EAAIqB,EAAOD,EAAOnE,GAAnB,MAA8B,CAAE0B,KApBpC,qBAoB8DU,KAAM,CAACW,KAAIqB,QAAOD,QAAOnE,YAErGkE,EAAc,yDAAM,WAAOjC,GAAP,uBAAAC,EAAA,sEACZ+B,IAAQC,cADI,OAEF,KADvB9B,EADyB,QAEjBqB,aAAmB,EACArB,EAAKA,KAAzBgC,EADmB,EACnBA,MAAOrB,EADY,EACZA,GAAIoB,EADQ,EACRA,MAChBlC,EAASsE,EAAgBxD,EAAIqB,EAAOD,GAAO,KAJpB,2CAAN,uDAsBZqC,EAnCK,WAAmC,IAAlCzG,EAAiC,uDAAzBkB,EAAcsB,EAAW,uCACpD,OAAQA,EAAOb,MACb,IAXuB,qBAYrB,OAAO,eACF3B,EADL,GAEKwC,EAAOH,MAEd,QACE,OAAOrC,IChBTkB,EAAgB,CAClBwF,aAAa,GAwBAC,EArBI,WAAmC,IAAlC3G,EAAiC,uDAAzBkB,EAAcsB,EAAW,uCACnD,OAAQA,EAAOb,MACb,IARuB,qBASrB,OAAO,eACF3B,EADL,CAEE0G,aAAa,IAEjB,QACE,OAAO1G,I,kBCPT4G,EAAWC,YAAgB,CAC7BC,YAAaC,IACbC,YAAaX,EACbY,UAAWpE,IACX3C,KAAMuG,EACNS,KAAMC,IACNC,IAAKT,IAGAU,EAAmBvB,OAAOwB,sCAAwCC,IAClEC,EAAQC,YAAYb,EAAWS,EAAiBK,YAAgBC,OAGvE7B,OAAO8B,UAAYJ,EACJA,Q,yBCaAK,EAhCH,WACV,OACE,yBAAK7C,UAAW8C,IAAEC,KAChB,yBAAK/C,UAAW8C,IAAE7G,MAChB,kBAAC,IAAD,CAAST,GAAG,WAAWwH,gBAAiBF,IAAEG,YAA1C,WACW,MAGb,yBAAKjD,UAAW8C,IAAE7G,MAChB,kBAAC,IAAD,CAAST,GAAG,SAASwH,gBAAiBF,IAAEG,YAAxC,UAIF,yBAAKjD,UAAW8C,IAAE7G,MAChB,kBAAC,IAAD,CAAST,GAAG,YAAYwH,gBAAiBF,IAAEG,YAA3C,UACU,MAGZ,yBAAKjD,UAAW8C,IAAE7G,MAChB,kBAAC,IAAD,CAAST,GAAG,QAAQwH,gBAAiBF,IAAEG,YAAvC,OACO,MAGT,yBAAKjD,UAAW8C,IAAE7G,MAChB,kBAAC,IAAD,CAAST,GAAG,YAAYwH,gBAAiBF,IAAEG,YAA3C,WACW,Q,gBCaJC,EAvCO,SAAC3H,GAAW,IAAD,EACD4H,oBAAS,GADR,mBAC1BC,EAD0B,KAChBC,EADgB,OAELF,mBAAS5H,EAAMyD,QAFV,mBAE1BA,EAF0B,KAElBsE,EAFkB,KAM/BC,qBAAW,WACTD,EAAU/H,EAAMyD,UACf,CAACzD,EAAMyD,SAeR,OACE,8BACIoE,GACA,6BACE,0BAAMI,cAxBK,WACnBH,GAAY,KAuBJ,IAAwCrE,GAAU,YAAlD,MAGHoE,GACC,6BACE,2BAAOK,SAnBI,SAACC,GACpBJ,EAAWI,EAAEC,cAAcC,QAkBkBC,OAvBxB,WACrBR,GAAY,GACZ9H,EAAMuI,iBAAiB9E,IAqBkD+E,WAAS,EAACH,MAAO5E,OClB/EgF,EAZK,SAACzI,GACnB,OAAIA,EAAM4F,QAIR,yBAAKnB,UAAU,IACb,yBAAKiE,IAAK1I,EAAM4F,QAAQ+C,OAAOC,MAAOC,IAAI,KAC1C,kBAAC,EAAD,CAAepF,OAAUzD,EAAMyD,OAAQ8E,iBAAoBvI,EAAMuI,oBAL5D,kBAACO,EAAA,EAAD,O,mCCQIC,EAXF,SAAA/I,GACX,OACI,yBAAKyE,UAAW8C,IAAE5B,OAChB,yBAAKlB,UAAW8C,IAAE7G,MAChB,yBAAKgI,IAAKM,IAAMH,IAAI,SACpB,uBAAGI,KAAK,MAAR,IAAejJ,EAAMoD,S,kCCFzB8F,GAAUhJ,IAAMiJ,MAAK,SAACnJ,GAC1B,IAIIoJ,EAAkB,YAAIpJ,EAAM2F,OAAO0D,UAAU5I,KAAI,SAAC6I,GAAD,OACnD,kBAAC,EAAD,CAAMlG,KAAMkG,EAAElG,UAGhB,OACE,yBAAKqB,UAAW8C,IAAEgC,SAChB,wCACA,kBAACC,GAAD,CAAkBC,SAXR,SAACC,GACb1J,EAAM2J,QAAQD,EAAOE,YAWlBR,MAMHS,GAAcC,YAAU,IAoBtBN,GAAmBO,YAAU,CAAEpD,KAAM,WAAlBoD,EAlBL,SAAC/J,GACnB,OACE,0BAAMyJ,SAAUzJ,EAAMgK,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEjF,UAAWJ,KACXK,KAAK,UACLE,YAAY,iBACZE,SAAU,CAAC6E,IAAUL,OAGzB,6BACE,iDAQOX,MC7BAiB,GADQhK,aAZD,SAACV,GACrB,MAAO,CACLkG,MAAOlG,EAAMgH,YAAYd,UAGJ,SAAChE,GACxB,MAAO,CACLgI,QAAS,SAAC3D,GACRrE,ET2BwB,SAACqE,GAAD,MAAU,CAAE5E,KAvCzB,WAuCyC4E,QS3B3CoE,CAAepE,QAIP7F,CAA8C+I,I,qBCJtDmB,GATC,SAACrK,GACf,OACE,yBAAKyE,UAAW8C,KAAE+C,SAChB,kBAAC,EAAD,CAAa1E,QAAY5F,EAAM4F,QAAUnC,OAAUzD,EAAMyD,OAAQ8E,iBAAoBvI,EAAMuI,mBAC3F,kBAAC,GAAD,Q,mBCDAgC,G,4LAEF,IAAIpJ,EAASpB,KAAKC,MAAM0F,MAAM8E,OAAOrJ,OAChCA,IAAQA,EAASpB,KAAKC,MAAMyK,kBACjC1K,KAAKC,MAAM0K,eAAevJ,GAC1BpB,KAAKC,MAAM2K,cAAcxJ,K,+BAGzB,OAAO,kBAAC,GAAD,iBAAapB,KAAKC,MAAlB,CAAyB4F,QAAY7F,KAAKC,MAAM4F,QAAUnC,OAAU1D,KAAKC,MAAMyD,OAAQ8E,iBAAoBxI,KAAKC,MAAMuI,wB,GARlGrI,IAAML,WAkBtBmH,eACb7G,aARoB,SAACV,GAAD,MAAY,CAChCmG,QAASnG,EAAMgH,YAAYb,QAC3BnC,OAAQhE,EAAMgH,YAAYhD,OAC1B/D,OAAQD,EAAME,KAAKD,OACnB+K,iBAAkBhL,EAAME,KAAK8C,MAIJ,CAACiI,eXkBE,SAACvJ,GAAD,8CAAY,WAAOQ,GAAP,eAAAC,EAAA,sEACnByB,IAAWC,WAAWnC,GADH,OACpC8B,EADoC,OAEpCtB,EALqC,CAAEP,KAvCpB,mBAuC4CwE,QAKvC3C,EAASnB,OAFG,2CAAZ,uDWlBc6I,cXsBf,SAACxJ,GAAD,8CAAY,WAAOQ,GAAP,eAAAC,EAAA,sEAClByB,IAAWE,UAAUpC,GADH,OACnC8B,EADmC,OAEjCtB,EAASkE,EAAc5C,EAASnB,OAFC,2CAAZ,uDWtB8ByG,iBX0B3B,SAAC9E,GAAD,8CAAY,WAAO9B,GAAP,SAAAC,EAAA,sEACrByB,IAAWG,aAAaC,GADH,OAEN,IAFM,OAE1B3B,KAAKqB,YACfxB,EAASkE,EAAcpC,IAHa,2CAAZ,yDWzB9BmH,KACAhL,KAHaoH,CAIbuD,I,qBCVaM,GAhBA,SAAC7K,GACZ,OAAO,yBAAKyE,UAAW8C,KAAEuD,QACpB9K,EAAMN,OAAS,6BAAMM,EAAM6D,MAAZ,MAAqB,4BAAQkH,QAAW/K,EAAMiE,QAAzB,YAA0D,kBAAC,IAAD,CAAShE,GAAG,UAAZ,WCDjG+K,G,4LAEFjL,KAAKC,MAAM4D,gB,+BAGX,OAAO,kBAAC,GAAW7D,KAAKC,W,GALEE,IAAML,WAerBM,gBAPO,SAACV,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,OACnBmE,MAAOpE,EAAME,KAAKkE,SAIkB,CAACD,cAAaK,OZqBhC,yDAAM,WAAOtC,GAAP,SAAAC,EAAA,sEACH+B,IAAQM,SADL,OAEY,IAFZ,OAERnC,KAAKqB,YACfxB,EAASsE,EAAgB,KAAM,KAAM,MAAM,IAHzB,2CAAN,wDYrBP9F,CAAgD6K,I,6BCMzDC,GAAiBlB,YAAU,CAACpD,KAAM,SAAjBoD,EAjBL,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAc1F,EAAqB,EAArBA,MAAqB,yCACrD,OACE,0BAAMmF,SAAUO,GACbjF,aAAYD,KAAO,QAAS,CAACoF,KAAW,QAAS,wBACjDnF,aAAYD,KAAO,WAAY,CAACoF,KAAW,WAAY,YACvDnF,aAAYD,KAAO,aAAc,GAAI,WAAY,KAAM,cAEtDR,GAAS,yBAAKG,UAAWC,KAAMwG,cAC5B5G,GAGL,6BACE,+CAyBOnE,gBANO,SAACV,GACrB,MAAO,CACPC,OAAQD,EAAME,KAAKD,UAImB,CAACmE,MbdpB,SAACC,EAAOC,GAAR,IAAkBC,EAAlB,sGAAyC,WAAOrC,GAAP,iBAAAC,EAAA,sEACpC+B,IAAQE,MAAMC,EAAOC,EAAUC,GADK,OAEtB,KAD/Bf,EADqD,QAE1CnB,KAAKqB,WACfxB,EAASiC,MAELuH,EAAelI,EAASnB,KAAKsJ,SAASC,OAAS,EAAIpI,EAASnB,KAAKsJ,SAAW,aAChFzJ,EAAS2J,YAAW,QAAS,CAACC,OAAQJ,MANc,2CAAzC,yDacNhL,EAlBD,SAACH,GACb,GAAGA,EAAMN,OAAQ,OAAO,kBAAC,KAAD,CAAUO,GAAG,YAIrC,OACE,6BACE,qCACA,kBAACgL,GAAD,CAAgBxB,SANL,SAAC+B,GACdxL,EAAM6D,MAAM2H,EAAS1H,MAAO0H,EAASzH,SAAUyH,EAASxH,mBCtB7CyH,GANM,SAAC5L,GACpB,OAAO,SAACG,GAAD,OAAY,kBAAC,WAAD,CAAU0L,SAAU,kBAAC5C,EAAA,EAAD,OACrC,kBAACjJ,EAAcG,MCUb2L,GAAmBzL,IAAM0L,MAAK,kBAAM,iCACpCC,GAAiB3L,IAAM0L,MAAK,kBAAM,iCAElCE,G,4LAEF/L,KAAKC,MAAM+L,kB,+BAIX,OAAKhM,KAAKC,MAAMmG,YAId,yBAAK1B,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACb,kBAAC,KAAD,CAAOuH,KAAK,WAAWC,OAAQR,GAAaE,MAC5C,kBAAC,KAAD,CAAOK,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,KAAD,CAAOD,KAAK,SAASC,OAAQR,GAAaI,MAC1C,kBAAC,KAAD,CAAOG,KAAK,SAASC,OAAQR,GAAaS,QAVvC,yBAAKzH,UAAU,aAAY,kBAACqE,EAAA,EAAD,W,GAPtB5I,IAAML,WA2BpBsM,GAAenF,YACjB4D,KACAzK,aANoB,SAACV,GAAD,MAAY,CAChC0G,YAAa1G,EAAMoH,IAAIV,eAKE,CAAC4F,cd1BC,kBAAM,SAACpK,GAChC,IAAIyK,EAAUzK,EAASiC,KAEvByI,QAAQC,IAAI,CAACF,IAAUpJ,MAAK,WAC1BrB,EANiC,CAAEP,KAjBd,8Bc2CR4F,CAE0B8E,IAS5BS,GAPE,WACjB,OAAO,kBAAC,IAAD,KACL,kBAAC,IAAD,CAAUtF,MAAOA,GACf,kBAACkF,GAAD,SC9CJK,IAASP,OAAO,kBAAC,GAAD,MAAkBQ,SAASC,eAAe,SlB6HtD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7J,MAAK,SAAA8J,GACjCA,EAAaC,iB,gCmBrInB,sCAOejE,IAJG,WAChB,OAAO,yBAAKpE,MAAO,CAACsI,MAAO,MAAM,yBAAKtE,IAAOuE,IAAUpE,IAAI,Q,gCCJ7D,oEAAO,IAAMqB,EAAW,SAAC7B,GACvB,IAAIA,EACJ,MAAO,qBAEIyB,EAAY,SAACoD,GAAD,OAAY,SAAC7E,GACpC,GAAIA,GAASA,EAAMgD,OAAS6B,EAAS,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCJvC5N,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,QAAU,wB,mBCAlFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,aAAe,oC,qFCC/GoB,EAAe,CACjBwM,QAAS,CACP,CAAE1K,GAAI,EAAGwC,KAAM,SACf,CAAExC,GAAI,EAAGwC,KAAM,WACf,CAAExC,GAAI,EAAGwC,KAAM,WACf,CAAExC,GAAI,EAAGwC,KAAM,cACf,CAAExC,GAAI,EAAGwC,KAAM,UACf,CAAExC,GAAI,EAAGwC,KAAM,WAEjBmG,SAAU,CACR,CAAE3I,GAAI,EAAG2K,QAAS,MAClB,CAAE3K,GAAI,EAAG2K,QAAS,sBAClB,CAAE3K,GAAI,EAAG2K,QAAS,MAClB,CAAE3K,GAAI,EAAG2K,QAAS,MAClB,CAAE3K,GAAI,EAAG2K,QAAS,QAoBTC,EAAqB,SAACrH,GAAD,MAAU,CAAE5E,KApCzB,eAoC6C4E,SAEnDQ,IAnBQ,WAAmC,IAAlC/G,EAAiC,uDAAzBkB,EAAcsB,EAAW,uCACvD,OAAQA,EAAOb,MACb,IArBiB,eAsBf,IAAI2E,EAAM,CACRtD,GAAI,EACJ2K,QAASnL,EAAO+D,MAElB,OAAO,eACFvG,EADL,CAEE2L,SAAS,GAAD,mBAAM3L,EAAM2L,UAAZ,CAAsBrF,MAGlC,QACE,OAAOtG,M","file":"static/js/main.00b58cdc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IslamicBanking.23591a4b.jpg\";","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\nisAuth:  state.auth.isAuth\r\n})\r\nconst withAuthRedirect = (Component) => { \r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n  return ConnectAuthRedirectComponent \r\n}\r\n\r\nexport default withAuthRedirect","export const updateObjectArray = (items, itemId, ObjPropName, newObjProps) => {\r\n  items.map( item => {\r\n  if (items[ObjPropName] === itemId) {\r\n    return { ...item, ...newObjProps };\r\n  }\r\n  return item\r\n})\r\n}","// import logo from \"../components/Profile/ProfileInfo/IslamicBanking.jpg\";\r\nimport { userAPI } from \"../api/api.js\";\r\nimport { updateObjectArray } from \"../utils/object-helpers.jsx\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_FOLLOWING_PROGRESS = \"TOGGLE_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  currentPage: 1,\r\n  totalUsersCount: 0,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectArray(state.users, action.userId, \"id\", {followed: true})\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectArray(state.users, action.userId, \"id\", {followed: false})\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let data = await userAPI.getUsers(currentPage, pageSize)\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n      dispatch(setCurrentPage(currentPage))\r\n  };\r\n};\r\nconst followUnfollowFlow = async (dispatch, userId, action, succesTypeAC) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let resultCode = await action(userId)\r\n      if (resultCode === 0) dispatch(succesTypeAC(userId));\r\n      debugger\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    \r\n  followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfollowSuccess)\r\n  }\r\n};\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), followSuccess)\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","module.exports = __webpack_public_path__ + \"static/media/Blocks-1s-200px.696a389a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"profile_content__vQjdC\",\"contentImage\":\"profile_contentImage__1xOId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1qkg3\"};","import * as axios from \"axios\";\r\n\r\nlet initialAxios = axios.create({\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': 'ca28c6fb-7008-4227-ac1b-fb7c9209103f'\r\n  }\r\n})\r\n\r\nexport const userAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return initialAxios\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => { return response.data })\r\n  },\r\n  unfollow(userId) {\r\n    return initialAxios.delete(`follow/${userId}`).then(response => { return response.data.resultCode} )\r\n  },\r\n  follow(userId) {\r\n    return initialAxios.post(`follow/${userId}`).then(response => { return response.data.resultCode} )\r\n  }\r\n}\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return initialAxios.get(`profile/${userId}`) \r\n  },\r\n  getStatus(userId) {\r\n    return initialAxios.get(`profile/status/${userId}`)\r\n    },\r\n  updateStatus(status) {\r\n    return initialAxios.put(`profile/status`, {status: status})\r\n  }\r\n}\r\nexport const authAPI = {\r\n  getAuthUser() {\r\n    return initialAxios.get('auth/me').then(response => { return response.data})\r\n  },\r\n  login(email, password, rememberMe) {\r\n    return initialAxios.post('auth/login', {email, password, rememberMe})\r\n  },\r\n  logout() {\r\n    return initialAxios.delete('auth/login')\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__2SF60\",\"item\":\"nav_item__3r1fl\",\"activeLink\":\"nav_activeLink__2cyoX\"};","import React from 'react'\r\nimport style from './FormControl.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children }) => {\r\n  let hasError = touched && error\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : '')}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\nexport const Textarea = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return <FormControl {...props}>\r\n    <textarea {...input} {...restProps} />\r\n  </FormControl>\r\n}\r\nexport const Input = (props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  return <FormControl {...props}>\r\n    <input {...input} {...restProps} />\r\n  </FormControl>\r\n}\r\nexport const createField = (component, name, validators, type, placeholder, aboutText) => {\r\n  return <div>\r\n    <Field component={component} name={name} validate={validators} type={type} placeholder={placeholder} />{aboutText}\r\n  </div>\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {profileAPI} from '../api/api'\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS'\r\n\r\nlet initialState =  {\r\n  posts: [\r\n    { id: 1, post: \"Hai\" },\r\n    { id: 3, post: \"How are you\" },\r\n    { id: 3, post: \"It's my post\" }\r\n  ],\r\n  profile: null ,\r\n  status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:{\r\n      let row = {\r\n        id: 7,\r\n        post: action.text\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, row]\r\n      }\r\n    }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state, profile: action.profile\r\n      }\r\n    case SET_USER_STATUS:\r\n      return {\r\n        ...state, status: action.status\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostCreator = (text) =>({ type: ADD_POST, text })\r\nexport const setUserProfile = (profile) =>({ type: SET_USER_PROFILE, profile })\r\nexport const setUserStatus = (status) =>({ type: SET_USER_STATUS, status })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getProfile(userId)\r\n      dispatch(setUserProfile(response.data))\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(response.data))\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n      if(response.data.resultCode === 0){\r\n        dispatch(setUserStatus(status))\r\n      }\r\n}\r\n\r\nexport default profileReducer;","import {authAPI} from '../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\n\r\nlet initialState =  {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false \r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_USER_DATA:\r\n      return {\r\n        ...state, \r\n        ...action.data\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\nexport const setAuthUserData = (id, email, login, isAuth) =>({ type: SET_AUTH_USER_DATA, data: {id, email, login, isAuth} })\r\n\r\nexport const getAuthUser = () => async (dispatch) => {\r\n    let data = await authAPI.getAuthUser()\r\n        if(data.resultCode === 0) {\r\n          let {email, id, login} = data.data;\r\n          dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n  }\r\nexport const login = (email, password, rememberMe = false) => async (dispatch) => {\r\n     let response = await authAPI.login(email, password, rememberMe)\r\n        if(response.data.resultCode === 0) {\r\n          dispatch(getAuthUser())\r\n        } else {\r\n          let errorMessage = response.data.messages.length > 0 ? response.data.messages : \"Some error\";\r\n          dispatch(stopSubmit('login', {_error: errorMessage}))\r\n        }\r\n  }\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n        if(response.data.resultCode === 0) {\r\n          dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n}\r\nexport default authReducer;","import { getAuthUser } from './auth-reducer'\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS'\r\n\r\nlet initialState =  {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZE_SUCCESS:\r\n      return {\r\n        ...state, \r\n        initialized: true\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\nexport const InitializeSuccess = () =>({ type: INITIALIZE_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUser())\r\n    \r\n    Promise.all([promise]).then(() => {\r\n      dispatch(InitializeSuccess())\r\n    })\r\n  }\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n  dialogsPage: dialogsReducer,\r\n  profilePage: profileReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n\r\nwindow.__store__ = store\r\nexport default store;","import React from \"react\";\r\nimport s from \"../Navbar/nav.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages{\" \"}\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile/\" activeClassName={s.activeLink}>\r\n          Profile{\" \"}\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n          News{\" \"}\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n          Settings{\" \"}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import s from '../profile.module.css'\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  let activeEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n  let deactiveEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status)\r\n  }\r\n  let onStatusChange = (e) => {\r\n    setStatus( e.currentTarget.value)\r\n  }\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if(prevProps.status !== this.props.status) {\r\n  //     this.setState({\r\n  //       status: this.props.status\r\n  //     })\r\n  //   }\r\n  // }\r\n    return (\r\n      <div>\r\n        {!editMode && (\r\n          <div>\r\n            <span onDoubleClick= {activeEditMode}> {status || 'no status'} </span>\r\n          </div>\r\n        )}\r\n        {editMode && (\r\n          <div>\r\n            <input onChange = { onStatusChange } onBlur = {deactiveEditMode} autoFocus value={status} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React from 'react'\r\n// import s from '../profile.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n  if(!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div className=''>\r\n      <img src={props.profile.photos.large} alt=\"\" />\r\n      <ProfileStatus status = {props.status} updateUserStatus = {props.updateUserStatus} />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./post.module.css\";\r\nimport logo from \"../ProfileInfo/IslamicBanking.jpg\"\r\n\r\nconst Post = props => {\r\n  return (\r\n      <div className={s.posts}>\r\n        <div className={s.item}>\r\n          <img src={logo} alt=\"logo\" />\r\n          <a href=\"#s\"> {props.post}</a>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from \"./post\";\r\nimport s from \"./post.module.css\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLength } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControl/FormControl\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let addPost = (values) => {\r\n    props.addPost(values.newPost);\r\n  };\r\n\r\n  let messageElements = [...props.posts].reverse().map((m) => (\r\n    <Post post={m.post} />\r\n  ));\r\n\r\n  return (\r\n    <div className={s.myPosts}>\r\n      <h3>My Posts</h3>\r\n      <AddPostFormRedux onSubmit={addPost} />\r\n      {messageElements}\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nlet maxLength10 = maxLength(10)\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPost\"\r\n          placeholder=\"Add a new post\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({ form: \"profile\" })(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import {\r\n  addPostCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (text) => {\r\n      dispatch(addPostCreator(text));\r\n    }\r\n  }\r\n}\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps )(MyPosts)\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"../Profile/profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile = { props.profile } status = {props.status} updateUserStatus = {props.updateUserStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() { \r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) userId = this.props.authorizedUserId \r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId)\r\n  }\r\n  render() { \r\n    return <Profile {...this.props} profile = { this.props.profile } status = {this.props.status} updateUserStatus = {this.props.updateUserStatus} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.id\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport s from '../Header/header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n \r\nconst Header = (props) => {\r\n    return <div className={s.header}>\r\n        {props.isAuth ? <div>{props.login} - <button onClick = {props.logout}>Log out</button></div> : <NavLink to=\"/login\" >Login</NavLink>}\r\n        \r\n        {/* <img src=\"../../img/telegram.png\" /> */}\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default Header;  ","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {getAuthUser, logout} from '../../redux/auth-reducer'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getAuthUser();\r\n  }\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps, {getAuthUser, logout})(HeaderContainer);\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Input, createField } from \"../common/FormControl/FormControl\";\r\nimport {required} from \"../../utils/validators/validators\"\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from \"../common/FormControl/FormControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, ...props}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField(Input, \"email\", [required], \"email\", \"yourname@example.com\")}\r\n      {createField(Input, \"password\", [required], \"password\", \"Password\")}\r\n      {createField(Input, \"rememberMe\", [], \"checkbox\", null, \"rememberMe\")}\r\n      {\r\n        error && <div className={style.summaryError}>\r\n          {error} \r\n        </div>\r\n      }\r\n      <div>\r\n        <button>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  if(props.isAuth) return <Redirect to='profile' />\r\n  let onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>LOGIN</h1>\r\n      <LoginReduxForm onSubmit = {onSubmit}/>\r\n    </div>\r\n  );\r\n};\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n  isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nconst withSuspense = (Component) => { \r\n  return (props) =>  <Suspense fallback={<Preloader />}>\r\n    <Component {...props} />\r\n  </Suspense>\r\n  }\r\n\r\nexport default withSuspense","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport Nav from './components/Navbar/Nav';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { Route, withRouter } from 'react-router-dom';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializeApp} from './redux/app-reducer'\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport withSuspense from './hoc/withSuspense';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <div className=\"preloader\"><Preloader /></div>\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Nav />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          <Route path=\"/users\" render={withSuspense(UsersContainer)} />\n          <Route path=\"/login\" render={withSuspense(LoginPage)}/>\n        </div>\n      </div>\n    );\n  }\n}\nlet mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, {initializeApp}))(App);\n\nlet SamuraiJSApp = () => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n} \n  export default SamuraiJSApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from './App';\n\n  ReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\r\nimport loading from './Blocks-1s-200px.svg'\r\n\r\nconst Preloader = () =>{\r\n  return <div style={{width: 200}}><img src= { loading } alt=\"\"/></div>\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n  if (value) return undefined\r\n  return 'Field is required'\r\n}\r\nexport const maxLength = (maxLen) => (value) => {\r\n  if (value && value.length > maxLen ) return `Max length is ${maxLen} symbols`\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"post_posts__3E6v9\",\"item\":\"post_item__1jfJw\",\"myPosts\":\"post_myPosts__2zBUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3AUiM\",\"error\":\"FormControl_error__3QftY\",\"summaryError\":\"FormControl_summaryError__1BL5q\"};","const SEND_MESSAGE = 'SEND_MESSAGE'; \r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Sohib\" },\r\n    { id: 2, name: \"Javohir\" },\r\n    { id: 3, name: \"Dilshod\" },\r\n    { id: 4, name: \"Salohiddin\" },\r\n    { id: 5, name: \"Ma'ruf\" },\r\n    { id: 6, name: \"G'iyos\" }\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 3, message: \"I'm fine thank you\" },\r\n    { id: 4, message: \"Hi\" },\r\n    { id: 5, message: \"Hi\" },\r\n    { id: 6, message: \"Hi\" }\r\n  ]\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:{\r\n      let row = {\r\n        id: 7,\r\n        message: action.text\r\n      };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, row]\r\n      };\r\n    }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (text) =>({ type: SEND_MESSAGE, text })\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}