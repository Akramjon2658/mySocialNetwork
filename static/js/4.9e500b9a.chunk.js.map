{"version":3,"sources":["components/Dialogs/dialog.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","item","active","to","name","Message","message","maxLength50","maxLength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogElements","dialogsPage","dialogs","map","d","messageElements","messages","m","dialogItems","values","text","newMessage","sendMessage","compose","connect","st","dp","sendMessageCreator","withAuthRedirect"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,YAAc,4BAA4B,OAAS,uBAAuB,SAAW,yBAAyB,aAAe,+B,8FCYlKC,EATI,SAAAC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,KAAO,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCIjBC,EATC,SAAAT,GAEd,OACE,yBAAKG,UAAWC,IAAEM,SAChB,iCAAOV,EAAMU,W,iCC0BfC,EAAcC,YAAU,IAgBtBC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAK,aACLa,YAAY,sBACZC,SAAU,CAACC,IAAUZ,KAEvB,8CAOSa,EA3CC,SAACxB,GACf,IAOIyB,EAAiBzB,EAAM0B,YAAYC,QAAQC,KAAI,SAACC,GAAD,OACjD,kBAAC,EAAD,CAAY3B,GAAI2B,EAAE3B,GAAIM,KAAMqB,EAAErB,UAE5BsB,EAAkB9B,EAAM0B,YAAYK,SAASH,KAAI,SAACI,GAAD,OACnD,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,aAGtB,OACE,yBAAKP,UAAWC,IAAEuB,SAChB,yBAAKxB,UAAWC,IAAE6B,aAAcR,GAChC,yBAAKtB,UAAWC,IAAE2B,UACfD,EACD,kBAACjB,EAAD,CAAqBG,SAhBP,SAACkB,GAHH,IAACC,IAILD,EAAOE,WAHnBpC,EAAMqC,YAAYF,S,wBCUPG,sBACbC,aAboB,SAACC,GACrB,MAAO,CACLd,YAAac,EAAGd,gBAGK,SAACe,GACxB,MAAO,CACLJ,YAAa,SAACF,GACZM,EAAGC,YAAmBP,SAM1BQ,IAFaL,CAGbd","file":"static/js/4.9e500b9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialog_dialogs__2j6Oc\",\"dialogItems\":\"dialog_dialogItems__1fBmP\",\"active\":\"dialog_active__1zVQX\",\"messages\":\"dialog_messages__d3DRi\",\"contentImage\":\"dialog_contentImage__1l36S\"};","import React from 'react'\r\nimport s from \"../dialog.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = props => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.item + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from '../dialog.module.css'\r\n\r\nconst Message = props => {\r\n  // let path = \"/dialogs/\"\r\n  return (\r\n    <div className={s.message}>\r\n      <div> {props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"../Dialogs/dialog.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {required, maxLength} from '../../utils/validators/validators'\r\nimport {Textarea} from '../common/FormControl/FormControl'\r\n\r\nconst Dialogs = (props) => {\r\n  let sendMessage = (text) => {\r\n    props.sendMessage(text);\r\n  };\r\n  let addNewMessage = (values) => {\r\n    sendMessage(values.newMessage)\r\n  }\r\n\r\n  let dialogElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogItem id={d.id} name={d.name} />\r\n  ));\r\n  let messageElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>{dialogElements}</div>\r\n      <div className={s.messages}>\r\n        {messageElements}\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nlet maxLength50 = maxLength(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={Textarea}\r\n        name=\"newMessage\"\r\n        placeholder=\"Enter a new message\"\r\n        validate={[required, maxLength50]}\r\n      />\r\n      <button> SEND </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {\r\n  sendMessageCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (st) => {\r\n  return {\r\n    dialogsPage: st.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dp) => {\r\n  return {\r\n    sendMessage: (text) => {\r\n      dp(sendMessageCreator(text));\r\n    }\r\n  }\r\n};  \r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n"],"sourceRoot":""}